# Generated by Django 4.2.11 on 2024-11-11 16:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists'}, max_length=50, unique=True)),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'A user with that email already exists'}, max_length=255, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('is_active', models.BooleanField(default=True)),
                ('total_matches', models.IntegerField(default=0)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_online', models.BooleanField(default=False)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('avatar_link', models.ImageField(default='avatars/default.png', upload_to='avatars')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread_name', models.CharField(max_length=50)),
                ('last_message', models.TextField(max_length=500)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('last_date', models.DateTimeField(auto_now=True)),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conv_receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conv_sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_no', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=30)),
                ('image', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Tokens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=25)),
                ('token', models.CharField(max_length=25)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('expired_date', models.DateTimeField(default=users.models.default_token_expiration)),
                ('other', models.CharField(max_length=12, null=True)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='token', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Tokens',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('type', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=False)),
                ('callback', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread_name', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.BooleanField(default=False)),
                ('content', models.TextField(max_length=500)),
                ('message_type', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('conversation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_message', to='users.conversation')),
                ('receiver', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='receiver_message', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_message', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('time', models.PositiveIntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_draw', models.BooleanField(default=False)),
                ('player1_goals', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('player2_goals', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('match_id', models.UUIDField(primary_key=True, serialize=False)),
                ('player1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player1_match', to=settings.AUTH_USER_MODEL)),
                ('player2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player2_match', to=settings.AUTH_USER_MODEL)),
                ('winner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winner_match', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver_invitations', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_invitations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GameSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paddle', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Color must be in the format #rrggbb.', regex='^#[0-9A-Fa-f]{6}$')])),
                ('ball', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Color must be in the format #rrggbb.', regex='^#[0-9A-Fa-f]{6}$')])),
                ('background', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Color must be in the format #rrggbb.', regex='^#[0-9A-Fa-f]{6}$')])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conversation_id_friend', to='users.conversation')),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user1_friend', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user2_friend', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Blocked_Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('blocked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_friend', to=settings.AUTH_USER_MODEL)),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocker_friend', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Auth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, max_length=50, unique=True)),
                ('is_enabled', models.BooleanField(default=False)),
                ('method', models.CharField(default='email', max_length=25)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expire_date', models.DateTimeField(default=users.models.default_expire_date)),
                ('match_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('date_sent', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_invitations', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('match_id', 'sender', 'receiver')},
            },
        ),
    ]
